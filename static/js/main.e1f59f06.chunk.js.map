{"version":3,"sources":["components/main-layout/main-layout.module.scss","components/text-area/text-area.module.scss","modules/profile/profile.module.scss","components/form-group/form-group.module.scss","components/page-heading/page-heading.module.scss","components/image-upload/image-upload.module.scss","components/navigation/navigation.const.ts","components/main-layout/main-layout.component.tsx","components/date-picker/date-picker.component.tsx","components/text-input/text-input.component.tsx","components/form-group/form-group.component.tsx","components/navigation/navigation.component.tsx","components/page-heading/page-heading.component.tsx","components/text-area/text-area.component.tsx","components/image-upload/image-upload.component.tsx","api/data-handling.ts","modules/form/form.form.ts","modules/form/form.component.tsx","modules/profile/profile.component.tsx","App.tsx","reportWebVitals.js","index.js","components/navigation/navigation.module.scss"],"names":["module","exports","ApplicationRoutes","MainLayout","children","className","styles","wrapper","content","DatePicker","field","form","props","onChange","date","dateString","setFieldValue","name","value","moment","TextInput","tooltipContent","suffix","title","InfoCircleOutlined","style","color","FormGroup","label","validationError","htmlFor","Item","labelCol","span","validateStatus","help","formItem","NAVIGATION_ITEMS","route","FORM","icon","EditOutlined","PROFILE","ProfileOutlined","Navigation","pathname","useLocation","navWrapper","listWrapper","map","item","listItem","link","to","Icon","component","classNames","activeIcon","PageHeading","header","TextArea","lengthCounter","lengthCounterError","errors","touched","split","length","maxLength","ImageUpload","useState","imageUrl","setImageUrl","useEffect","listType","imageUploadError","showUploadList","beforeUpload","file","isCorrectSize","size","message","error","customRequest","info","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","src","alt","width","LOCAL_STORAGE_KEY","fetchData","localStorageData","localStorage","getItem","JSON","parse","formInitialValues","firstName","lastName","emailAddress","phoneNumber","birthdayDate","about","avatar","getTooShortMessage","minLength","getTooLongMessage","validationSchema","Yup","shape","required","min","max","email","test","Boolean","isNaN","slice","Form","navigate","useNavigate","initialValues","onSubmit","data","setItem","stringify","saveData","gutter","xs","sm","type","Title","Typography","Text","Profile","profileData","setProfileData","md","lg","xl","xxl","App","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1f59f06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main-layout_wrapper__J6QqQ\",\"content\":\"main-layout_content__2fN9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lengthCounter\":\"text-area_lengthCounter__i4N2T\",\"lengthCounterError\":\"text-area_lengthCounterError__3tcmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__2IYn0\",\"avatar\":\"profile_avatar__3d7-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formItem\":\"form-group_formItem__3kPT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"page-heading_header__2Wjx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageUploadError\":\"image-upload_imageUploadError__V5Rpi\"};","import { ProfileOutlined, EditOutlined } from '@ant-design/icons';\n\ntype NavigationItem = {\n  route: string;\n  icon: React.ForwardRefExoticComponent<any>;\n};\n\nexport enum ApplicationRoutes {\n  FORM = '/form',\n  PROFILE = '/profile',\n}\n\nexport const NAVIGATION_ITEMS: NavigationItem[] = [\n  {\n    route: ApplicationRoutes.FORM,\n    icon: EditOutlined,\n  },\n  {\n    route: ApplicationRoutes.PROFILE,\n    icon: ProfileOutlined,\n  },\n];\n","import { Navigation } from '../';\n\nimport styles from './main-layout.module.scss';\n\ntype MainLayoutProps = {\n  children: React.ReactNode;\n};\n\nexport const MainLayout: React.FC<MainLayoutProps> = ({ children }) => (\n  <div className={styles.wrapper}>\n    <Navigation />\n    <main className={styles.content}>{children}</main>\n  </div>\n);\n","import { DatePicker as AntDatePicker } from 'antd';\nimport { ComponentProps } from 'react';\nimport { FieldProps } from 'formik';\nimport moment from 'moment';\n\nexport const DatePicker: React.FC<\n  FieldProps & ComponentProps<typeof AntDatePicker>\n> = ({ field, form, ...props }) => (\n  <AntDatePicker\n    {...field}\n    onChange={(date, dateString) => form.setFieldValue(field.name, dateString)}\n    value={field.value ? moment(field.value) : null}\n    {...props}\n  />\n);\n","import { ComponentProps } from 'react';\nimport { FieldProps } from 'formik';\nimport { Input, Tooltip } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\ntype TextInputProps = {\n  tooltipContent?: React.ReactNode;\n};\n\nexport const TextInput: React.FC<\n  TextInputProps & FieldProps & ComponentProps<typeof Input>\n> = ({ field, form, tooltipContent, ...props }) => (\n  <Input\n    suffix={\n      tooltipContent && (\n        <Tooltip title={tooltipContent}>\n          <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\n        </Tooltip>\n      )\n    }\n    {...field}\n    {...props}\n  />\n);\n","import React from 'react';\nimport { Form } from 'antd';\n\nimport styles from './form-group.module.scss';\n\ntype FormGroupProps = {\n  label: React.ReactNode;\n  validationError: React.ReactNode | null;\n  htmlFor: string;\n  children: React.ReactNode;\n};\n\nexport const FormGroup: React.FC<FormGroupProps> = ({\n  label,\n  validationError,\n  htmlFor,\n  children,\n}) => {\n  return (\n    <>\n      <Form.Item\n        label={label}\n        labelCol={{ span: 24 }}\n        validateStatus={!!validationError ? 'error' : ''}\n        help={validationError}\n        htmlFor={htmlFor}\n        className={styles.formItem}\n      >\n        {children}\n      </Form.Item>\n    </>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport Icon from '@ant-design/icons';\nimport classNames from 'classnames';\n\nimport { NAVIGATION_ITEMS } from './navigation.const';\n\nimport styles from './navigation.module.scss';\n\nexport const Navigation = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <nav className={styles.navWrapper}>\n      <ul className={styles.listWrapper}>\n        {NAVIGATION_ITEMS.map((item) => (\n          <li className={styles.listItem} key={item.route}>\n            <Link className={styles.link} to={item.route}>\n              <Icon\n                component={item.icon}\n                className={classNames(styles.icon, {\n                  [styles.activeIcon]: pathname === item.route,\n                })}\n              />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n","import classNames from 'classnames';\n\nimport styles from './page-heading.module.scss';\n\ntype PageHeadingProps = {\n  children: React.ReactNode;\n  className?: string;\n} & React.HTMLProps<HTMLHeadingElement>;\n\nexport const PageHeading: React.FC<PageHeadingProps> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <header>\n    <h1 className={classNames(styles.header, className)} {...props}>\n      {children}\n    </h1>\n  </header>\n);\n","import { ComponentProps } from 'react';\nimport { FieldProps } from 'formik';\nimport { Input } from 'antd';\nimport classNames from 'classnames';\n\nimport styles from './text-area.module.scss';\n\nexport const TextArea: React.FC<\n  FieldProps & ComponentProps<typeof Input.TextArea>\n> = ({ field, form, ...props }) => (\n  <>\n    <Input.TextArea {...field} {...props} />\n    <div\n      className={classNames(styles.lengthCounter, {\n        [styles.lengthCounterError]:\n          form.errors[field.name] && form.touched[field.name],\n      })}\n    >\n      {field.value.split('').length} / {props.maxLength}\n    </div>\n  </>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Upload, message } from 'antd';\nimport { FieldProps } from 'formik';\nimport { RcFile } from 'antd/lib/upload';\nimport classNames from 'classnames';\n\nimport styles from './image-upload.module.scss';\n\nconst IMAGE_MAX_MEGABYTES = 3;\n\nexport const ImageUpload: React.FC<FieldProps> = ({\n  field,\n  form,\n  ...props\n}) => {\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (field.value) {\n      setImageUrl(field.value);\n    }\n  }, [field.value]);\n\n  const getBase64 = (\n    img: RcFile | Blob,\n    callback: (result: string | ArrayBuffer | null) => void\n  ) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n\n    if (img) {\n      reader.readAsDataURL(img);\n    }\n  };\n\n  const beforeUpload = (file: RcFile) => {\n    const isCorrectSize = file.size / 1024 / 1024 < IMAGE_MAX_MEGABYTES;\n    if (!isCorrectSize) {\n      message.error(`Image should not be bigger than ${IMAGE_MAX_MEGABYTES}mb`);\n    }\n\n    return isCorrectSize;\n  };\n\n  return (\n    <Upload\n      name=\"avatar\"\n      listType=\"picture-card\"\n      className={classNames({\n        [styles.imageUploadError]:\n          form.errors[field.name] && form.touched[field.name],\n      })}\n      showUploadList={false}\n      beforeUpload={beforeUpload}\n      customRequest={() => {}}\n      onChange={(info) =>\n        getBase64(info.file.originFileObj!, (imageUrl) => {\n          setImageUrl(imageUrl as string);\n          form.setFieldValue(field.name, imageUrl);\n        })\n      }\n      {...props}\n    >\n      {imageUrl ? (\n        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\n      ) : (\n        '+'\n      )}\n    </Upload>\n  );\n};\n","import { formInitialValues } from '../modules/form/form.form';\n\nconst LOCAL_STORAGE_KEY = 'formData';\n\nexport const saveData = (data: typeof formInitialValues) => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));\n};\n\nexport const fetchData = () => {\n  const localStorageData = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n  if (localStorageData) {\n    return JSON.parse(localStorageData);\n  }\n};\n","import * as Yup from 'yup';\n\nexport const formInitialValues = {\n  firstName: '',\n  lastName: '',\n  emailAddress: '',\n  phoneNumber: '',\n  birthdayDate: '',\n  about: '',\n  avatar: '',\n};\n\nconst getTooShortMessage = (minLength: number) =>\n  `Please provide at least ${minLength} digits`;\nconst getTooLongMessage = (name: string, maxLength: number) =>\n  `${name} should be shorter than ${maxLength} digits`;\n\nexport const validationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Required')\n    .min(2, getTooShortMessage(2))\n    .max(50, getTooLongMessage('First name', 50)),\n  lastName: Yup.string()\n    .required('Required')\n    .min(2, getTooShortMessage(2))\n    .max(100, getTooLongMessage('Last name', 100)),\n  emailAddress: Yup.string()\n    .email('Invalid email format')\n    .required('Required')\n    .max(80, getTooLongMessage('Email', 80)),\n  phoneNumber: Yup.string()\n    .required('Required')\n    .test('isTelephoneNumber', 'Incorrect telephone number', (value) =>\n      Boolean(\n        value &&\n          value[0] === '+' &&\n          !isNaN(value.slice(1) as unknown as number) &&\n          value.split('').length > 7\n      )\n    ),\n  birthdayDate: Yup.string().required('Required'),\n  about: Yup.string()\n    .required('Required')\n    .min(5, getTooShortMessage(10))\n    .max(500, getTooLongMessage('Description', 500)),\n  avatar: Yup.string().required('Required'),\n});\n","import { Formik, Form as FormikForm, Field } from 'formik';\n\nimport {\n  PageHeading,\n  FormGroup,\n  TextInput,\n  DatePicker,\n  TextArea,\n  ImageUpload,\n} from '../../components';\nimport { Row, Col } from 'antd';\nimport { useNavigate } from 'react-router';\n\nimport { ApplicationRoutes } from '../../components/navigation/navigation.const';\nimport { saveData, fetchData } from '../../api';\nimport { formInitialValues, validationSchema } from './form.form';\n\nexport const Form: React.FC<any> = () => {\n  const navigate = useNavigate();\n\n  const handleSubit = (data: typeof formInitialValues) => {\n    saveData(data);\n    navigate(ApplicationRoutes.PROFILE);\n  };\n\n  return (\n    <>\n      <PageHeading>Form</PageHeading>\n      <Formik\n        initialValues={fetchData() || formInitialValues}\n        onSubmit={handleSubit}\n        validationSchema={validationSchema}\n      >\n        {({ errors, touched }) => (\n          <FormikForm>\n            <Row gutter={5}>\n              <Col xs={24} sm={12}>\n                <FormGroup\n                  label=\"First name\"\n                  htmlFor=\"firstName\"\n                  validationError={touched.firstName && errors.firstName}\n                >\n                  <Field component={TextInput} name=\"firstName\" />\n                </FormGroup>\n              </Col>\n              <Col xs={24} sm={12}>\n                <FormGroup\n                  label=\"Last name\"\n                  htmlFor=\"lastName\"\n                  validationError={touched.lastName && errors.lastName}\n                >\n                  <Field component={TextInput} name=\"lastName\" />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row gutter={5}>\n              <Col xs={24} sm={12}>\n                <FormGroup\n                  label=\"Email address\"\n                  htmlFor=\"emailAddress\"\n                  validationError={touched.emailAddress && errors.emailAddress}\n                >\n                  <Field component={TextInput} name=\"emailAddress\" />\n                </FormGroup>\n              </Col>\n              <Col xs={24} sm={12}>\n                <FormGroup\n                  label=\"Phone number\"\n                  htmlFor=\"phoneNumber\"\n                  validationError={touched.phoneNumber && errors.phoneNumber}\n                >\n                  <Field\n                    component={TextInput}\n                    name=\"phoneNumber\"\n                    tooltipContent=\"Phone number must begin with country code, for example '+48' for Poland.\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <FormGroup\n                  label=\"About\"\n                  htmlFor=\"about\"\n                  validationError={touched.about && errors.about}\n                >\n                  <Field component={TextArea} name=\"about\" maxLength={500} />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={7}>\n                <FormGroup\n                  label=\"Birthday date\"\n                  htmlFor=\"birthdayDate\"\n                  validationError={touched.birthdayDate && errors.birthdayDate}\n                >\n                  <Field component={DatePicker} name=\"birthdayDate\" />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={7}>\n                <FormGroup\n                  label=\"Avatar\"\n                  htmlFor=\"avatar\"\n                  validationError={touched.avatar && errors.avatar}\n                >\n                  <Field component={ImageUpload} name=\"avatar\" />\n                </FormGroup>\n              </Col>\n            </Row>\n            <button type=\"submit\">click</button>\n          </FormikForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Avatar, Typography } from 'antd';\nimport { PageHeading } from '../../components/page-heading/page-heading.component';\nimport { fetchData } from '../../api';\nimport { formInitialValues } from '../form/form.form';\n\nimport styles from './profile.module.scss';\n\nconst { Title, Text } = Typography;\n\nexport const Profile = () => {\n  const [profileData, setProfileData] = useState<\n    typeof formInitialValues | null\n  >(null);\n\n  useEffect(() => {\n    setProfileData(fetchData() || null);\n  }, []);\n\n  return (\n    <>\n      <PageHeading>Profile</PageHeading>\n      {profileData ? (\n        <div className={styles.wrapper}>\n          <Avatar\n            src={profileData.avatar}\n            className={styles.avatar}\n            size={{ xs: 150, sm: 200, md: 200, lg: 200, xl: 200, xxl: 200 }}\n          />\n          <Title>\n            {profileData.firstName} {profileData.lastName}\n          </Title>\n          <Text>{profileData.birthdayDate}</Text>\n          <Text>{profileData.emailAddress}</Text>\n          <Text>{profileData.phoneNumber}</Text>\n        </div>\n      ) : (\n        <p>empty</p>\n      )}\n    </>\n  );\n};\n","import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n\nimport { MainLayout } from './components';\nimport { ApplicationRoutes } from './components/navigation/navigation.const';\nimport { Form, Profile } from './modules';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <MainLayout>\n        <Routes>\n          <Route path={ApplicationRoutes.FORM} element={<Form />} />\n          <Route path={ApplicationRoutes.PROFILE} element={<Profile />} />\n          <Route\n            path=\"/\"\n            element={<Navigate replace to={ApplicationRoutes.PROFILE} />}\n          />\n        </Routes>\n      </MainLayout>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"navigation_navWrapper__6kDD_\",\"listWrapper\":\"navigation_listWrapper__jzp0B\",\"listItem\":\"navigation_listItem__1LMld\",\"link\":\"navigation_link__3kE9z\",\"icon\":\"navigation_icon__L_E-3\",\"activeIcon\":\"navigation_activeIcon__1RvNW\"};"],"sourceRoot":""}